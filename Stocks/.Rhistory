shiny::runApp()
install.packages("devtools") # if not installed
install.packages("FinancialInstrument") #if not installed
install.packages("PerformanceAnalytics") #if not installed
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("FinancialInstrument") #if not installed
install.packages("PerformanceAnalytics") #if not installed
# next install blotter from GitHub
devtools::install_github("braverock/blotter")
stock.str='AAPL' # what are we trying it on
currency('USD')
stock(stock.str,currency='USD',multiplier=1)
startDate="1999-12-31"
initEq=1000000
portfolio.st='macross'
account.st='macross'
initPortf(portfolio.st,symbols=stock.str)
90 x 20%        +       75 x 20%       +        95  x 20%       +       85 x 20%
90 * 20%        +       75 * 20%       +        95  * 20%       +       85 * 20%
90 * 20%        +       75 * 20%       +        95  * 20%       +       85 * 20%
90 * 20% + 75 * 20% + 95 * 20% + 85 * 20%
90 * 0.20 + 75 * 0.20 + 95 * 0.20 + 85 * 0.20
90 * 0.20 + 75 * 0.20 + 95 * 0.20 + 85 * 0.20
90 * 0.25 + 75 * 0.25 + 95 * 0.25 + 85 * 0.25
winner <- c("iowa", "ohio state", "gonzaga")
game <- c("iowa v wisc", "osu v penn st", "gonz v st marys")
bet_amount <- c(50, 50, 50)
to_win <- c(43, 43, 35)
gambling <- data.frame(winner, game, bet_amount, to_win)
game.results <- gambling %>%
rowwise() %>%
mutate(prob_to_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(0:100,1) / 100 < prob_to_win)  %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
library(dplyr)
gambling <- data.frame(winner, game, bet_amount, to_win)
game.results <- gambling %>%
rowwise() %>%
mutate(prob_to_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(0:100,1) / 100 < prob_to_win)  %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
all.win.parlay <- data.frame(winner = "All Win Parlay",
game = "ALL",
bet_amount=50,
to_win=300,
is_win=all(game.results$is_win==TRUE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
all.loss.parlay <- data.frame(winner = "All Loss Parlay",
game = "ALL",
bet_amount=33,
to_win=300,
is_win=all(game.results$is_win==FALSE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.win.parlay) %>% rbind(all.loss.parlay)
}
sum(game.results$profit)
}
simulator = function(gamesDF, withWinLossParlays, numTrials) {
simulation.results <- data.frame()
for (i in 1:numTrials) {
simulation.results <- simulation.results %>% rbind(data.frame(profit=gamblingProfit(gamesDF, withWinLossParlays)))
}
simulation.results
}
sim.results <- simulator(gambling, TRUE, 1000)
sim.results <- simulator(gambling, TRUE, 1000)
game.results
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
all.win.parlay <- data.frame(winner = "All Win Parlay",
game = "ALL",
bet_amount=50,
prob_to_win="N/A",
to_win=300,
is_win=all(game.results$is_win==TRUE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
all.loss.parlay <- data.frame(winner = "All Loss Parlay",
game = "ALL",
bet_amount=33,
prob_to_win="N/A",
to_win=300,
is_win=all(game.results$is_win==FALSE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.win.parlay) %>% rbind(all.loss.parlay)
}
sum(game.results$profit)
}
sim.results <- simulator(gambling, TRUE, 1000)
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
all.win.parlay <- data.frame(winner = "All Win Parlay",
game = "ALL",
bet_amount=50,
to_win=300,
prob_to_win="N/A",
is_win=all(game.results$is_win==TRUE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
all.loss.parlay <- data.frame(winner = "All Loss Parlay",
game = "ALL",
bet_amount=33,
to_win=300,
prob_to_win="N/A",
is_win=all(game.results$is_win==FALSE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.win.parlay) %>% rbind(all.loss.parlay)
}
sum(game.results$profit)
}
simulator = function(gamesDF, withWinLossParlays, numTrials) {
simulation.results <- data.frame()
for (i in 1:numTrials) {
simulation.results <- simulation.results %>% rbind(data.frame(profit=gamblingProfit(gamesDF, withWinLossParlays)))
}
simulation.results
}
sim.results <- simulator(gambling, TRUE, 1000)
gamblingProfit(gambling, TRUE)
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_to_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
all.win.parlay <- data.frame(winner = "All Win Parlay",
game = "ALL",
bet_amount=50,
to_win=300,
prob_to_win="N/A",
is_win=all(game.results$is_win==TRUE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
all.loss.parlay <- data.frame(winner = "All Loss Parlay",
game = "ALL",
bet_amount=33,
to_win=300,
prob_to_win="N/A",
is_win=all(game.results$is_win==FALSE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.win.parlay) %>% rbind(all.loss.parlay)
}
sum(game.results$profit)
}
gamblingProfit(gambling, TRUE)
sim.results <- simulator(gambling, TRUE, 1000)
sim.results
sum(sim.results$profit)
sim.results.no.parlays <- simulator(gambling, FALSE, 1000)
sim.results.no.parlays
sum(sim.results.no.parlays)
gamblingProfit(gambling, TRUE)
sim.results <- simulator(gambling, TRUE, 1000)
sim.results
sum(sim.results$profit)
sim.results.no.parlays <- simulator(gambling, FALSE, 1000)
sim.results.no.parlays
sum(sim.results.no.parlays)
print("Hello")
print("Hello", 1)
print("Hello", 1)
print("Hello", "A")
print("Hello" + "A")
message("Hello" + "A")
message("Hello", "A")
message("Hello", " A")
# sim.results
message("With Parlays: ", sum(sim.results$profit))
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
gamblingProfit(gambling, TRUE)
sim.results <- simulator(gambling, TRUE, 1000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 1000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_to_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
all.win.parlay <- data.frame(winner = "All Win Parlay",
game = "ALL",
bet_amount=50,
to_win=300,
prob_to_win="N/A",
is_win=all(game.results$is_win==TRUE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
all.loss.parlay <- data.frame(winner = "All Loss Parlay",
game = "ALL",
bet_amount=50,
to_win=500,
prob_to_win="N/A",
is_win=all(game.results$is_win==FALSE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.win.parlay) %>% rbind(all.loss.parlay)
}
sum(game.results$profit)
}
simulator = function(gamesDF, withWinLossParlays, numTrials) {
simulation.results <- data.frame()
for (i in 1:numTrials) {
simulation.results <- simulation.results %>% rbind(data.frame(profit=gamblingProfit(gamesDF, withWinLossParlays)))
}
simulation.results
}
gamblingProfit(gambling, TRUE)
sim.results <- simulator(gambling, TRUE, 1000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 1000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
simulator = function(gamesDF, withWinLossParlays, numTrials) {
simulation.results <- data.frame()
for (i in 1:numTrials) {
simulation.results <- simulation.results %>% rbind(data.frame(profit=gamblingProfit(gamesDF, withWinLossParlays)))
}
simulation.results
}
gamblingProfit(gambling, TRUE)
sim.results <- simulator(gambling, TRUE, 1000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 1000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 1000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 1000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 1000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 1000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 1000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 1000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 10000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 10000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_to_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
all.win.parlay <- data.frame(winner = "All Win Parlay",
game = "ALL",
bet_amount=50,
to_win=300,
prob_to_win="N/A",
is_win=all(game.results$is_win==TRUE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
# all.loss.parlay <- data.frame(winner = "All Loss Parlay",
#                               game = "ALL",
#                               bet_amount=50,
#                               to_win=500,
#                               prob_to_win="N/A",
#                               is_win=all(game.results$is_win==FALSE)) %>%
#                 mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.win.parlay) %>% rbind(all.loss.parlay)
}
sum(game.results$profit)
}
simulator = function(gamesDF, withWinLossParlays, numTrials) {
simulation.results <- data.frame()
for (i in 1:numTrials) {
simulation.results <- simulation.results %>% rbind(data.frame(profit=gamblingProfit(gamesDF, withWinLossParlays)))
}
simulation.results
}
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_to_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
all.win.parlay <- data.frame(winner = "All Win Parlay",
game = "ALL",
bet_amount=50,
to_win=300,
prob_to_win="N/A",
is_win=all(game.results$is_win==TRUE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
# all.loss.parlay <- data.frame(winner = "All Loss Parlay",
#                               game = "ALL",
#                               bet_amount=50,
#                               to_win=500,
#                               prob_to_win="N/A",
#                               is_win=all(game.results$is_win==FALSE)) %>%
#                 mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.win.parlay) %>% rbind(all.loss.parlay)
}
sum(game.results$profit)
}
simulator = function(gamesDF, withWinLossParlays, numTrials) {
simulation.results <- data.frame()
for (i in 1:numTrials) {
simulation.results <- simulation.results %>% rbind(data.frame(profit=gamblingProfit(gamesDF, withWinLossParlays)))
}
simulation.results
}
sim.results <- simulator(gambling, TRUE, 2000)
sim.results <- simulator(gambling, TRUE, 2000)
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_to_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
all.win.parlay <- data.frame(winner = "All Win Parlay",
game = "ALL",
bet_amount=50,
to_win=300,
prob_to_win="N/A",
is_win=all(game.results$is_win==TRUE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
# all.loss.parlay <- data.frame(winner = "All Loss Parlay",
#                               game = "ALL",
#                               bet_amount=50,
#                               to_win=500,
#                               prob_to_win="N/A",
#                               is_win=all(game.results$is_win==FALSE)) %>%
#                 mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.win.parlay)#  %>% rbind(all.loss.parlay)
}
sum(game.results$profit)
}
simulator = function(gamesDF, withWinLossParlays, numTrials) {
simulation.results <- data.frame()
for (i in 1:numTrials) {
simulation.results <- simulation.results %>% rbind(data.frame(profit=gamblingProfit(gamesDF, withWinLossParlays)))
}
simulation.results
}
sim.results <- simulator(gambling, TRUE, 2000)
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 2000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
gamblingProfit = function(gamesDF, withWinLossParlays){
game.results <- gamesDF %>%
rowwise() %>%
mutate(prob_to_win=1 - to_win / (bet_amount + to_win)) %>%
mutate(is_win=sample(c(TRUE, FALSE), 1)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
if (withWinLossParlays) {
# all.win.parlay <- data.frame(winner = "All Win Parlay",
#                              game = "ALL",
#                              bet_amount=50,
#                              to_win=300,
#                              prob_to_win="N/A",
#                              is_win=all(game.results$is_win==TRUE)) %>%
#                   mutate(profit=ifelse(is_win, to_win, -bet_amount))
all.loss.parlay <- data.frame(winner = "All Loss Parlay",
game = "ALL",
bet_amount=50,
to_win=500,
prob_to_win="N/A",
is_win=all(game.results$is_win==FALSE)) %>%
mutate(profit=ifelse(is_win, to_win, -bet_amount))
game.results <- game.results %>% rbind(all.loss.parlay) # %>% rbind(all.win.parlay)
}
sum(game.results$profit)
}
simulator = function(gamesDF, withWinLossParlays, numTrials) {
simulation.results <- data.frame()
for (i in 1:numTrials) {
simulation.results <- simulation.results %>% rbind(data.frame(profit=gamblingProfit(gamesDF, withWinLossParlays)))
}
simulation.results
}
sim.results <- simulator(gambling, TRUE, 2000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 2000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 2000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 2000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 2000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 2000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 2000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 2000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 2000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 2000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
sim.results <- simulator(gambling, TRUE, 2000)
# sim.results
message("With Parlays: ", sum(sim.results$profit))
sim.results.no.parlays <- simulator(gambling, FALSE, 2000)
# sim.results.no.parlays
message("Without Parlays: ", sum(sim.results.no.parlays))
